services:
  frontend:
    container_name: frontend
    image: node:22-alpine
    working_dir: /usr/src/app
    volumes:
      - ./client:/usr/src/app
      - ./shared:/usr/src/shared
      - /app/node_modules
    command: sh -c "npm ci && npm run dev -- --host"
    environment:
      NODE_ENV: development
    ports:
      - 5173:5173
      - 24678:24678 # Vite Hot Module Replacement

  backend:
    container_name: backend
    image: node:22-alpine
    working_dir: /usr/src/app
    volumes:
      - ./server:/usr/src/app
      - ./shared:/usr/src/shared
      - /app/node_modules
    command: sh -c "npm ci && npm run dev"
    #Martin's addition starts
    env_file: ./server/.env
    #Martin's addition ends
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      #Martin's addition starts
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      #Martin's addition ends
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:17.3-alpine
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./server/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DV: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
